{"title":"Downloading Github Commits","markdown":{"yaml":{"title":"Downloading Github Commits","author":"<a href='https://orcid.org/0000-0003-2471-3411'>James Tripp <img alt='ORCID logo' src='https://info.orcid.org/wp-content/uploads/2019/11/orcid_16x16.png' width='16' height='16' /></a>","date":"2022-05-28","categories":["visualisation","code","api"]},"containsRefs":false,"markdown":"\n\nCode repository commits are informative.\n\nThe code for much of the software I use lives on [Github](https://github.com). People are continually editing and uploading contributions to the different projects. I think we could learn a lot about a community from looking at who commits and what they commit to.\n\nThe GitHub api makes it easy to download commits with their API. A list of JSON objects can be downloaded using their API. The format for the API is\n\nhttps://api.github.com/repos/{user/organisation}/{repo}/commits?pages={page_number}\n\nso we can see the most recent commits to the Omeka S project by going to the page below.\n\nhttps://api.github.com/repos/omeka/omeka-s/commits?page=1\n\n\nTo download the page in Python we use our old friends requests and json to parse the page.\n\n```{python}\nimport requests\nimport json\nimport pandas as pd\n\nurl = \"https://api.github.com/repos/omeka/omeka-s/commits?page=1\"\n\nresp = requests.get(url)\n\njson_list = json.loads(resp.text)\n```\n\nFor this toy example, it's easier to go through the json list and pick out the author and date.\n```{python}\ndef filter_json(data: json) -> dict:\n    out = data[\"commit\"][\"author\"]\n    return out\n\nresult = []\nfor json_item in json_list:\n    result.append(\n        filter_json(json_item)\n        )\n\ndf = pd.DataFrame(result)\n```\n\nWho has made the most commits looking at only the most recent 30 commits?\n\n```{python}\npd.pivot_table(\n    df,\n    index = 'name',\n    values = 'date',\n    aggfunc='count'\n    )\n```\n\nAs a plot (as if we need it...)\n\n```{python}\nfrom matplotlib import pyplot as plt\nfig, ax = plt.subplots()\n\ndf['name'].value_counts().plot(\n    ax=ax,\n    kind='bar',\n    xlabel='Users',\n    ylabel='Commit Frequency'\n    )\n\n```\n\nJohn Flatness is clearly leading. Though there are lots of caveats:\n\n* Does this hold true across the project history?\n* Are the commits all the same size? If not, then how do we weight commits of different size?\n\netc.\n\nThough it is a start."},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"0.9.483","theme":"litera","title-block-banner":false,"title":"Downloading Github Commits","author":"<a href='https://orcid.org/0000-0003-2471-3411'>James Tripp <img alt='ORCID logo' src='https://info.orcid.org/wp-content/uploads/2019/11/orcid_16x16.png' width='16' height='16' /></a>","date":"2022-05-28","categories":["visualisation","code","api"]},"extensions":{"book":{"multiFile":true}}}}}